<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="BoardMapper">
  <!-- SQL 구문별 생성 -->
  <!-- SQL 구문별 id namespace.id -->
  <!-- paramiterType(매게변수로 가져온 객체), resultType(내보내는 결과 객체) -->
  
  <insert id="add" parameterType="bvo"> <!-- bvo처럼 약어로 지정했을떄 사용가능  -->
  insert into board(title, writer, content, image_File)
  values(#{title}, #{writer}, #{content}, #{image_File})
  </insert>
  <select id="list" resultType="bvo">
     select * from board order by bno desc
    </select>
  <select id="detail" parameterType="int" resultType="bvo">
  select * from board where bno = #{bno}
  </select>
  <select id="up" parameterType="bvo">
  update board set title = #{title}, content = #{content},
  moddate = now(), image_File= #{image_File}
  where bno = #{bno}
  </select>
  
  
  <select id="fileName" parameterType="int" resultType="String">
  select image_FIle from board where bno = #{bno}
  </select>
  
     <delete id="delete" parameterType="int">
     delete from board where bno = #{bno}
     </delete>
   <update id="update" parameterType="int">
   	 update board set count = count+1 where bno = #{bno}
   </update>
   
     <select id="cnt" parameterType="pgvo" resultType="int">
     select count(bno) from board
     <include refid="search"></include>
     </select>
      <select id="page" parameterType="pgvo" resultType="bvo">
     select * from board where bno >0
     <include refid="search"></include>
     <!-- 쓸때마다 search로 가져오기  -->
      order by bno desc
     limit #{pageStart}, #{qty}
  </select>
  	  <!-- select count(bno) from board where  //  -->
  <sql id="search">
  	<!-- 자주 쓰니 id로search를 지정  -->
   <if test="type != null">
      <trim prefix="and(" suffix=")"  prefixOverrides="OR">
      							<!-- prefixOverrides="OR" 제일 앞에 나오는 OR만 없애주세요 -->
         <foreach collection="typeToArray" item="type">
            <trim prefix="OR">
            <!-- trim prefix= "OR" 앞에 무조건 or을 붙여라  -->
               <choose>
                  <when test="type == 't'.toString()">
                     title like concat('%',#{keyword},'%')
                  </when>

                  <when test="type == 'c'.toString()">
                     content like concat('%',#{keyword},'%')
                  </when>

                  <when test="type == 'w'.toString()">
                     writer like concat('%',#{keyword},'%')
                  </when>
               </choose>
            </trim>
         </foreach>
      </trim>
   </if>
</sql>
  
  </mapper>